[{"title":"logi靶机","url":"/2025/10/01/logi靶机/","content":"\n# logi靶机\n\n## 端口扫描\n\n![image-20251001000300575](image-20251001000300575.png)\n\n访问80端口\n\n## 信息搜集\n\n![image-20251001000332758](image-20251001000332758.png)\n\n只是个静态页面\n\n但是有个提示\n\n__never give up记住这个要考__\n\n目前不懂是什么意思\n\n看看网站源代码\n\n![image-20251001000613777](image-20251001000613777.png)\n\n猜测就是用户的密码\n\name:jiayouachunyu\n\n## 目录扫描\n\n扫个目录\n\n有两个登录路由\n\n![image-20251001000449127](image-20251001000449127.png)\n\n来到/user\n\n![image-20251001000656216](image-20251001000656216.png)\n\n输入刚刚的账号密码\n\n成功登录\n\n![image-20251001000720065](image-20251001000720065.png)\n\n但是经过测试\n\n这个页面也是没啥用\n\n没啥信息\n\n我们来到/admin登录路由\n\n![image-20251001000814458](image-20251001000814458.png)\n\n看看网站源代码\n\n![image-20251001000847131](image-20251001000847131.png)\n\n提示我们账号密码和校验码并没有用\n\n倒是有个token\n\n__猜测可能在用户登录的时候产生了一个token作为凭证__\n\n我们用bp去抓个包\n\n刷新并抓包刚刚我们登录的/user\n\n确实有一段jwt作为token\n\n![image-20251001001056306](image-20251001001056306.png)\n\n我们拿去破解一下这个jwt\n\n![image-20251001001153115](image-20251001001153115.png)\n\n可以看到在载荷中有个sub和role他们分别为ame和user\n\n猜测我们可以伪造一个admin的jwt直接登录到admin账号\n\n但是还缺少密钥\n\n刚刚在首页的时候提示我们never give up后面会考\n\n猜测这个可能就是密钥了\n\n我们拿去伪造一下\n\n## jwt伪造\n\n![image-20251001001547209](image-20251001001547209.png)\n\n当我输入那一串字符串的时候直接就显示是正确的密钥且签名是正确的\n\n那么我们之前的猜测是没错的\n\n我们直接伪造admin的jwt\n\n![image-20251001001719298](image-20251001001719298.png)\n\n修改一下sub和role改为admin\n\n![image-20251001001819837](image-20251001001819837.png)\n\n将token的内容改成我们伪造的jwt\n\n放包\n\n成功登录\n\n![image-20251001001851343](image-20251001001851343.png)\n\n提示我们有一个php文件\n\n我们访问看看\n\n![image-20251001001912034](image-20251001001912034.png)\n\n![image-20251001001929586](image-20251001001929586.png)\n\n## fuzz\n\n提示我们要fuzz测试\n\n那么拿上字典去fuzz测试一下\n\n__这个php文件很有可能就是一句话木马__\n\n直接用参数测试命令执行\n\n![image-20251001002024000](image-20251001002024000.png)\n\n完成爆破\n\n![image-20251001002301806](image-20251001002301806.png)\n\n发现只有cmd的状态码是500\n\n其他全是200\n\n400的就是一些不可见字符导致的不用理会\n\n其实这里也有可能是post方法\n\n我们也试一下\n\n![image-20251001002643219](image-20251001002643219.png)\n\n确实没有什么变化\n\n猜测就是get方法了\n\n我们拿cmd去测试一下\n\n我测试了ls dir whoami等命令\n\n全是500\n\n我接着又测试了system('ls') var_dump('a') var_dump(\\`id\\`)\n\n也全是500\n\n这个时候我接了个逗号\n\nsystem('ls'); var_dump(\\`id\\`); var_dump('a');\n\n![image-20251001003740271](image-20251001003740271.png)\n\n这个时候有变化了\n\n成功执行了var_dump()这个php函数\n\n命令没法直接执行\n\n没有逗号也没法执行php函数\n\n猜测这个一句话木马的参数首先是cmd\n\n然后使用的是eval函数\n\n方法是GET\n\n这个时候我们看看他的php探针\n\n![image-20251001004107036](image-20251001004107036.png)\n\n__之前system函数没法用就是因为这里限制了这个函数__\n\n我们换个exec弹shell就可以了\n\n成功拿到shell\n\n![image-20251001004442458](image-20251001004442458.png)\n\n## user\n\n有个ame用户\n\n![image-20251001004633399](image-20251001004633399.png)\n\n本来想传个fscan去爆破的\n\n但是这个靶机没有wget命令\n\n那我还是老老实实的去找密码吧\n\n经过一顿翻找\n\n终于在/var目录下发现密码\n\n![image-20251001004804675](image-20251001004804675.png)\n\n成功登录ame\n\n![image-20251001004916736](image-20251001004916736.png)\n\n获得user的flag\n\n![image-20251001004958830](image-20251001004958830.png)\n\n## root\n\n``` shell\nsudo -l\n```\n\n有个wall可以用\n\n![image-20251001083057150](image-20251001083057150.png)\n\n稍微去查了这个命令\n\n可以读取任意文件\n\n``` shell\nsudo wall --nobanner /filepath\n```\n\n我们尝试直接读取root.txt\n\n``` shell\nsudo wall --nobanner /root/root.txt\n```\n\n![image-20251001083346647](image-20251001083346647.png)\n\n一开始我真的以为这个就是flag\n\n问了一下说不是\n\n那应该是文件不对了\n\n既然可以任意文件读取\n\n我们看看能不能直接登到root的用户上\n\n``` shell\nsudo wall --nobanner /root/.ssh/id_rsa\n```\n\nroot确实有设置ssh的密钥对\n\n![image-20251001083653608](image-20251001083653608.png)\n\n![image-20251001083555933](image-20251001083555933.png)\n\n也允许我们可以使用私钥登录root\n\n![image-20251001083941379](image-20251001083941379.png)\n\n我们把私钥写到本地文件上\n\n然后直接拿着登录就行\n\n__在复制密钥的时候一定要注意去掉文件里面的空格和制表符__\n\n不然没法使用这个密钥\n\n``` shell\ncat file | tr -d ' ' > file1\n```\n\n这样可以去掉空格\n\n但是下面的空格也被去掉了\n\n![image-20251001084736188](image-20251001084736188.png)\n\n我这里手动改了一下（笑）\n\n都搞好之后可以检查一下\n\n``` shell\nod -d file\n```\n\n![image-20251001084900845](image-20251001084900845.png)\n\n看起来是没有空格了\n\n``` shell\nchmod 400 file\nssh root@ip -i file\n```\n\n成功拿到root\n\n![image-20251001085249218](image-20251001085249218.png)\n\n成功拿到root的flag\n\n![image-20251001085326614](image-20251001085326614.png)\n","tags":["打靶","知识","wp","mazesec"],"categories":["靶机"]},{"title":"从js到命令执行","url":"/2025/09/30/从js到命令执行/","content":"\n## 资产收集\n\n首先通过fofa找到某学校实训平台\n\n![image-20250930110132733](image-20250930110132733.png)\n\n访问ip\n\n## 信息搜集\n\n![image-20250930110250794](image-20250930110250794.png)\n\n直接f12看看js文件里面有没有泄露什么密码\n\n翻着翻着就找到密钥对了\n\n![image-20250930110552994](image-20250930110552994.png)\n\n我们登上去看看\n\n成功拿到专家账号\n\n![image-20250930110717069](image-20250930110717069.png)\n\n随便在平台里面点点\n\n发现直接就有地方可以执行代码\n\n![image-20250930110807992](image-20250930110807992.png)\n\n这个平台专门用来词语分析的\n\n有一个可以直接执行代码的地方\n\n那还说啥\n\n直接就命令执行试试\n\n成功命令执行\n\n还是root用户\n\n![image-20250930111003902](image-20250930111003902.png)\n\n成功拿下\n","tags":["知识","挖洞"],"categories":["挖洞记录"]},{"title":"paste2靶机","url":"/2025/09/30/paste2靶机/","content":"\n# paste2靶机\n\n## 端口扫描\n\n![image-20250930102104529](image-20250930102104529.png)\n\n访问80端口\n\n![image-20250930102132127](image-20250930102132127.png)\n\n查看源代码\n\n![image-20250930102150761](image-20250930102150761.png)\n\n有一串字符串\n\n可能后面会用到\n\n## 目录扫描\n\n![image-20250930102405069](image-20250930102405069.png)\n\n## user\n\n有个/4567的路由\n\n![image-20250930102434768](image-20250930102434768.png)\n\n有一个网站\n\n访问一下这个网站\n\n![image-20250930102524238](image-20250930102524238.png)\n\n有一个搜索框\n\n我们把刚刚的奇怪字符串拿去搜索一下\n\n![image-20250930102601782](image-20250930102601782.png)\n\n找到某人写的这个字符串\n\n这串字符串和此时的url的字符串有点相似\n\n一开始我还以为是什么base64\n\n但是都没发解出来\n\n查看api\n\n![image-20250930102755254](image-20250930102755254.png)\n\n发现路由都是跟上一个key\n\n可能一开始给的字符串就是一个key\n\n用那个奇怪的字符串当路由试试\n\n![image-20250930102845658](image-20250930102845658.png)\n\n发现密钥对\n\n猜测这就是ssh的账号密码\n\n成功登录\n\n![image-20250930103529834](image-20250930103529834.png)\n\n拿到user flag\n\n![image-20250930103606904](image-20250930103606904.png)\n\n## root\n\n查看可执行的sudo\n\n![image-20250930103715390](image-20250930103715390.png)\n\n有一个可以执行的脚本\n\n看一下内容\n\n![image-20250930103805042](image-20250930103805042.png)\n\nbash会去执行404.html中的内容\n\n只要把提权的脚本写入404.html即可\n\n我们去网站目录下面看看\n\n![image-20250930103902876](image-20250930103902876.png)\n\n目录里面有个路由\n\n![image-20250930104050735](image-20250930104050735.png)\n\n里面的文件写着一句话木马\n\n由于html目录是www-data的权限\n\n我们要先拿到www-data的账户\n\n我们回到那个80端口使用这个木马弹shell\n\n![image-20250930104230321](image-20250930104230321.png)\n\n![image-20250930104320070](image-20250930104320070.png)\n\n拿到www-data的用户了\n\n我们去写404.html\n\n![image-20250930104509447](image-20250930104509447.png)\n\n写入\n\n``` shell\n#!/bin/bash\nchmod +s /bin/bash\n```\n\n然后让yi用户执行那个脚本就可以了\n\n![image-20250930104645839](image-20250930104645839.png)\n\n成功提权\n","tags":["打靶","wp","mazesec"],"categories":["靶机"]},{"title":"记一次别样的文件上传","url":"/2025/09/29/记一次别样的文件上传/","content":"\n## 文件上传\n\n对于经常挖洞的师傅们 文件上传肯定是必测的点\n\n但是大多数情况下 文件上传对于后缀名 内容 等等都有做限制\n\n本人遇到没法直接上传的话 只会试一些简单的绕过手法\n\n当然大部分也都是没啥用的 这个时候就直接下一个了\n\n但是受存储桶覆盖的启发 便有了本文的别样的文件上传\n\n---\n\n## 资产收集\n\n首先通过fofa找到了某大学的考研座位管理系统\n\n![QQ_1759127047264](QQ_1759127047264.png)\n\n点进去是一个登录框\n\n![QQ_1759127127785](QQ_1759127127785.png)\n\n通过网络搜索找到学校学生的信息\n\n然后注册一个账号\n\n## 测试功能点\n\n![QQ_1759127300835](QQ_1759127300835.png)\n\n这个站点其实有挺多洞\n\n但是绝大部分都已经被找到了\n\n![QQ_1759127620778](QQ_1759127620778.png)\n\n也是喜提3个重复\n\n![E9A4E518D372AE10AD42CD1B28EF2CC2](E9A4E518D372AE10AD42CD1B28EF2CC2.gif)\n\n__(本文的重点不在于接口的搜集 在于下面的文件上传 这里不做具体操作的解说)__\n\n但是其中的一个接口泄露了用户的个人信息\n\n![QQ_1759129027586](QQ_1759129027586.png)\n\n这个接口泄露的用户的姓名 学号 手机号 还有上传的图片地址\n\n地址是一个存储桶\n\n## 文件上传\n\n回到首页\n\n点击书籍转卖\n\n有个上传点\n\n![QQ_1759127936736](QQ_1759127936736.png)\n\n我们随便上传一个图片\n\n![QQ_1759128929565](QQ_1759128929565.png)\n\n成功上传了\n\n这里记得我测过xss\n\n貌似是不行的(有点忘记了)\n\n但是请注意这个时候上传的图片的名字\n\n__传到存储桶的图片名字居然和我本地图片的名字是相同的__\n\n按理来说 上传的图片的名字是会经过一定的处理的\n\n但是这里却没有做处理\n\n那么一个正常的思路就是上传一个图片然后名字就是已经在存储桶里面的图片的名字\n\n按理来说这个时候可以做到一个覆盖\n\n我们这个时候先访问一下刚刚那个学生的图片\n\n![QQ_1759128081079](QQ_1759128081079.png)\n\n里面是一些个人信息 比较敏感\n\n## 文件覆盖\n\n我们这个时候就拿一个和他一样名字的图片拿去上传\n\n![QQ_1759128393400](QQ_1759128393400.png)\n\n成功上传了\n\n这个时候去访问刚刚那个学生图片的url\n\n![QQ_1759128435374](QQ_1759128435374.png)\n\n可以发现这个时候上传的图片已经没法再正常显示了\n\n成功覆盖了存储桶中的相同图片\n\n---\n\n其实这里的原理和存储桶覆盖是没有什么区别的\n\n但是存储桶覆盖还要知道存储桶的ak和临时sk\n\n本文这里的洞不需要这些\n\n在平时测试的时候各位师傅可以注意一下这个地方\n\n如果没有对上传的图片的名字做处理的话那就可以试试这个思路\n\n---\n\n这个洞也是本人第一个证书站的洞\n\n![QQ_1759129266777](QQ_1759129266777.png)\n\n---\n\n## 叠甲环节\n\n文章来自作者日常积累，未经许可严禁转载，转载需联系本人。文中内容仅限学习交流，严禁用于商业及非法用途，涉及网络安全相关未经授权不得测试，违规使用后果自负，与作者及本文无关 。（都别乱搞哈）\n","tags":["知识","挖洞"],"categories":["挖洞记录"]},{"title":"使用hexo搭建blog所遇到的问题","url":"/2025/09/29/使用hexo搭建blog所遇到的问题/","content":"\n## 使用hexo所遇到的问题解决分享\n\n### 关于图片没法加载\n\n推荐这几位作者的解决方法\n\nhttps://www.cnblogs.com/edisonfish/p/18180672\n\nhttps://blog.csdn.net/m0_43401436/article/details/107191688\n\nhttps://arcsin2.cloud/2023/02/23/Hexo-%E5%8D%9A%E5%AE%A2%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/\n\n使用的是静态本地部署图片\n\n```\nhexo-asset-image\n```\n\n本人并没有使用这个插件\n\n这个插件可能是比较老的插件 下下来会报错\n\n还有好几个类似的插件\n\n都可以去试试\n\n---\n\n__首先安装插件 建议先去看一下上面推荐的文章再来看以下操作__\n\n打开外层的_config.yml\n\n__找到post_asset_folder__\n\n__将其改成true__\n\n__注意冒号之后要留一个空格__\n\n__将post_asset_folder改成true 这一步非常重要__\n\n![image-20250929130550578](image-20250929130550578.png)\n\n这样之后生成的文章都会在_post文件中自动创建一个相同名字的文件夹\n\n此文件夹就是专门用来放图片的\n\n__注意上传图片的时候__\n\n![QQ_1759122228537](QQ_1759122228537.png)\n\n直接拖进来的话括号中显示的是绝对路径\n\n__我们只要把路径都删去  留下图片名字即可__\n\n__(注意:本人是只要在括号中输入图片名即可，使用其他的插件可能对于路径有所不同)__\n\n![image-20250929131000000](image-20250929131000000.png)\n\n就像这样 此时在本地上图片是不会显示出来的 这并不影响后面在网站上面图片的加载\n\n我们这个时候\n\n```\nnpx hexo clean\nnpx hexo g\nnpx hexo s\n```\n\n启动服务\n\n此时即可看到图片被加载出来了\n\n---\n\n## 关于评论插件的设置\n\n我推荐这位作者的文章\n\nhttps://www.zhengnn.com/post/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%2FHexo%20%E9%85%8D%E7%BD%AE%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD\n\n---\n\n## 关于tag和categories显示不出来\n\n我推荐这位作者的文章\n\nhttps://blog.csdn.net/yinjiangQAQ/article/details/103951416\n\n本人在本地启动服务的时候会出现这个问题\n\n但是在服务器上却没有这个问题\n\n---\n\n还有其他问题可以在本文下方留言\n\n我会回复你的\n","tags":["知识","分享"],"categories":["解决方案"]},{"title":"chat靶机","url":"/2025/09/28/chat靶机/","content":"\n# chat靶机\n\n## 端口信息\n\n![1](1.png)\n\n主要是22 2222 8000端口\n\n## http\n\n![2](2.png)\n\n打开是某个用户的目录\n\n没法超越目录只能在这个目录下查看\n\n![3](3.png)\n\n.ssh里面有私钥\n\n可以尝试用私钥来免密登录\n\n公钥里面泄露了用户名称\n\n![4](4.png)\n\n## ssh chat\n\n这个端口开放的服务是一个匿名聊天室\n\n![5](5.png)\n\n用户名可以随便输入\n\n尝试多次并没有什么可以攻击的地方\n\n## ssh\n\n使用私钥来尝试ssh免密登录\n\n![6](6.png)\n\n虽然使用了私钥 但是并没有提示私钥是否正确 或者 权限问题 所以这个用户没法用私钥登录\n\n在之前的ssh chat也出现过todd\n\n可以进行尝试用todd和scycree去爆破密码\n\n![7](7.png)\n\n这里猜测todd:todd也是比较抽象（todd是群里的大佬）\n\n但是成功了\n\n![8](8.png)\n\n确实有scycree用户\n\n各自home目录下面都没有user的flag这个靶机可能只有root的flag了\n\n在scycree下面也确实有.ssh文件那么现在可以知道了，在网站里面的目录就是scycree的home目录映射出的\n\n![9](9.png)\n\n`cat /etc/ssh/sshd_config`\n\n查看有关ssh的配置文件可以知道确实scycree被ban掉了 没法用私钥直接免密登录\n\n`sudo -l`\n\n也没有什么可以用的命令\n\n那么现在只能爆破scycree的密码了\n\n![10](10.png)\n\n在本地开一个服务\n\n然后再靶机下载字典和工具\n\nsuForce是一个可以在本地去爆破密码的工具\n\nsuForce -u scycree -w 字典\n\n最后爆出来密码是welcome\n\n![11](11.png)\n\nscycree可以用ghfs命令\n\n先看看后台进程情况\n\n![12](12.png)\n\n看到这个地方就可以知道这个命令是干啥的了\n\n这个命令可以映射本地目录\n\n具体可以用法什么的可以去看看帮助手册\n\n![13](13.png)\n\n这里直接将root目录做了映射\n\n![14](14.png)\n\n这里就可以直接读root的flag了\n\n但是这里并没有登录root\n\n### 该怎么登录root呢\n\n![15](15.png)\n\n在root下面也有.ssh文件\n\n那么可以将自己的公钥部署在靶机上面实现免密登录root\n\n回到帮助手册里面\n\n![16](16.png)\n\n这一行里面可以实现文件上传\n\n`sudo ghfs -l 9000 -r /root -p /root`\n\n![17](17.png)\n\n最后只需把公钥部署在.ssh里面就可以免密登录了\n\n![18](18.png)\n\n---\n\n## 关于ssh登录机制\n\n![19](19.png)\n\n## 配置密钥与私钥\n\n生成密钥对\n\n`ssh-keygen -t rsa -b 4096 -f ~/.ssh`\n\n部署公钥\n\n`ssh-copy-id -i ~/.ssh/rsa_id.pub user@server`\n\n完成后公钥会自动添加到 `~/.ssh/authorized_keys`\n\n也可以手动配置公钥\n\n直接将公钥内容写到authorized_keys里面就可以了\n\n## 简单来说公钥就是关门的（锁） 私钥就是开门的（钥匙）\n","tags":["打靶","知识","wp","mazesec"],"categories":["靶机"]},{"title":"team靶机","url":"/2025/09/28/team靶机/","content":"\n# team靶机\n\n## 端口信息\n\n![1](1.png)\n\n开了两个http分别访问一下\n\n## http\n\n![2](2.png)\n\n80端口的web服务就只是一个静态页面没有用\n\n![3](3.png)\n\n8000端口的web服务是一个登录框通过目录扫描可以扫到一个api接口目录\n\n![4](4.png)\n\n![4](5.png)\n\n经过测试 这里面的接口即使是能用的也没有什么有用的信息所以现在只能尝试爆破密码了从常见的用户名 admin root user guest test去爆破看看经过一通爆破\n\n![6](6.png)\n\n最后发现有账号root:password123\n\n![7](7.png)\n\n进去看是一个仪表盘翻了一下并没有什么可以直接getshell的点但是在密钥存储这里有点线索\n\n![8](8.png)\n\n猜测todd和ssh有关可能是账号我们直接hydra爆破一下\n\n![9](9.png)\n\n爆破出来是todd:password123找到在ll104567目录下有user.txt拿到user的flag\n\n![10](10.png)\n\n## root\n\n老规矩先看看后台进程情况\n\n![11](11.png)\n\n绝大部分都是root干的www-data只是开启了一个apache服务可以猜测如果拿到刚刚后台网站的shell就直接拿到root用户了\n\n![12](12.png)\n\n我们可以在仓库里面新建一个仓库url写入我们的github仓库然后再github指定的仓库里面写上反弹shell最后制定一个模板任务就可以反弹shell了\n\n![13](13.png)\n\n最后成功拿shell\n\n![14](14.png)\n\n## 有关web服务的启动\n\n启动web服务最好是创建一个专门的用户\n\n在这个情况下即使被拿到shell\n\n也比直接拿到root权限好\n\n做了一手防护\n","tags":["打靶","知识","wp","mazesec"],"categories":["靶机"]},{"title":"使用systemd维护进程","url":"/2025/09/28/使用systemd维护进程/","content":"\n## 使用systemd维护进程\n\n使用systemd可以将服务注册为系统守护进程，使得服务可以长时间运作，断开ssh连接继续执行\n\n---\n\n创建/etc/systemd/system/服务名称.service\n\n并改写配置\n\n---\n\n[Unit]\nDescription=Hexo Image Server\nAfter=network.target\n\n[Service]\n\n### 指定工作目录\n\nWorkingDirectory=工作路径(在哪里启动)\n\n### 使用普通用户\n\nUser=your_username\nGroup=your_group\n\n### 修复命令：添加绑定地址和正确端口\n\nExecStart=二进制程序的绝对路径\n\n### 重启策略\n\nRestart=on-failure\nRestartSec=5s\n\n### 安全限制（可选）\n\nNoNewPrivileges=yes\nPrivateTmp=yes\n\n[Install]\nWantedBy=multi-user.target\n\n---\n\n保存配置之后\n\nsudo systemctl daemon-reload（重载配置信息）\n\nsudo systemctl start 服务名\n\nsudo systemctl status 服务名\n\n正常情况下就可以正常运行了\n\nsudo systemctl enable 服务名\n\n开机自动启动\n\n---\n\n## lsof命令可以查找进程\n\nlsof filename 显示打开指定文件的所有进程\n\nlsof -a 表示两个参数都必须满足时才显示结果\n\nlsof -c string 显示COMMAND列中包含指定字符的进程所有打开的文件\n\nlsof -u username 显示所属user进程打开的文件\n\nlsof -g gid 显示归属gid的进程情况\n\nlsof +d /DIR/ 显示目录下被进程打开的文件\n\nlsof +D /DIR/ 同上，但是会搜索目录下的所有目录，时间相对较长\n\nlsof -d FD 显示指定文件描述符的进程\n\nlsof -n 不将IP转换为[hostname](https://baike.baidu.com/item/hostname/812870?fromModule=lemma_inlink)，缺省是不加上-n参数\n\nlsof -i 用以显示符合条件的进程情况\n\nlsof -i[46] [protocol][@[host](https://baike.baidu.com/item/host/3758959?fromModule=lemma_inlink)name|hostaddr][:service|port]\n\n46 --＞ IPv4 or [IPv6](https://baike.baidu.com/item/IPv6/172297?fromModule=lemma_inlink)\n\nprotocol --＞ TCP or [UDP](https://baike.baidu.com/item/UDP/571511?fromModule=lemma_inlink)\n\nhostname --＞ Internet host name\n\nhostaddr --＞ [IPv4地址](https://baike.baidu.com/item/IPv4%E5%9C%B0%E5%9D%80/16742558?fromModule=lemma_inlink)\n\nservice --＞ /etc/service中的 service name (可以不只一个)\n\nport --＞ [端口号](https://baike.baidu.com/item/%E7%AB%AF%E5%8F%A3%E5%8F%B7/10883658?fromModule=lemma_inlink) (可以不只一个)\n\nlsof -i :4000\n\n查找端口号为4000的进程服务\n\n## kill可以杀死进程\n\n-l  信号，若果不加信号的编号参数，则使用“-l”参数会列出全部的信号名称\n\n-a  当处理当前进程时，不限制命令名和进程号的对应关系\n\n-p  指定kill 命令只打印相关进程的进程号，而不发送任何信号\n\n-s  指定发送信号\n\n-u  指定用户\n\nkill 9 \\<PID\\>\n\n杀死进程号为pid的进程\n\nhexo\n\n[Unit]\n\nDescription=Hexo Blog Server\n\nAfter=network.target\n\n[Service]\n\n# 使用专用用户\n\nUser=root\n\n# 设置环境变量\n\nEnvironment=\"NODE_ENV=production\"\n\nEnvironment=\"PATH=/usr/nodejs/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin\"\n\n# 工作目录和启动命令\n\nWorkingDirectory=/usr/blog\n\nExecStart=/usr/nodejs/bin/hexo server -p 80  # 改用高位端口\n\n# 重启策略\n\nRestart=always\n\nRestartSec=5\n\nStartLimitIntervalSec=60\n\nStartLimitBurst=3\n\n# 安全设置\n\nNoNewPrivileges=yes\n\nPrivateTmp=yes\n\n[Install]\n\nWantedBy=multi-user.target\n\nim\n\n[Unit]\n\nDescription=Hexo Image Server\n\nAfter=network.target\n\n[Service]\n\n# 指定工作目录（图片所在目录）\n\nWorkingDirectory=/usr/blog/source/_data/images\n\n# 使用普通用户（非root更安全）\n\nUser=hexouser\n\n# 修复命令：添加绑定地址和正确端口\n\nExecStart=/usr/bin/python3 -m http.server --bind 0.0.0.0 65532\n\n# 重启策略\n\nRestart=on-failure\n\nRestartSec=5s\n\n# 安全限制（可选）\n\nNoNewPrivileges=yes\n\nPrivateTmp=yes\n\n[Install]\n\nWantedBy=multi-user.target","tags":["知识"],"categories":["学习"]},{"title":"paste靶机","url":"/2025/09/28/paste靶机/","content":"\n# paste靶机\n\n## 端口信息\n\n先扫一下端口\n\n![2025-08-05-15-57-50-image](2025-08-05-15-57-50-image.png)\n\n主要是http和ftp可能有用\n\n看到ftp的banner信息里面有一个guest:gu\n\n提示我们用这个账号\n\n但是这个banner信息可能不完整\n\n我们去ftp先登录一下\n\n## ftp\n\n![2025-08-05-16-01-21-image](2025-08-05-16-01-21-image.png)\n\n提示我们用guest:guest登陆\n\n我们这里直接用这个账号去登录ssh试试\n\n## ssh\n\n![2025-08-05-16-03-25-image](2025-08-05-16-03-25-image.png)\n\n直接登上去了\n\n看看home目录有没有flag\n\n发现什么都没有\n\n![2025-08-05-16-04-13-image](2025-08-05-16-04-13-image.png)\n\n还有一个film用户\n\n我们看看/etc/passwd有没有什么信息\n\n里面也没有什么有用信息\n\n## http\n\n![2025-08-05-16-05-51-image](2025-08-05-16-05-51-image.png)\n\n打开页面\n\n关于描述貌似是一个密码生成器\n\n我们点一下产生密码\n\n猜测这个就是film账号的密码\n\n![2025-08-05-16-07-07-image](2025-08-05-16-07-07-image.png)\n\n成功登录film账号\n\n拿完flag看看有什么命令可以执行\n\n![2025-08-05-16-07-58-image](2025-08-05-16-07-58-image.png)\n\n有个paste命令可以用\n\n去网上查查这个命令有什么用\n\n最后发现paste可以直接读取文件\n\n于是root用户没必要登录 可以直接读取任意文件\n\n![2025-08-05-16-09-21-image](2025-08-05-16-09-21-image.png)\n\n---\n","tags":["打靶","wp","mazesec"],"categories":["靶机"]},{"title":"monitor靶机","url":"/2025/09/28/monitor靶机/","content":"\n# monitor靶机\n\n## 端口信息\n\n搜索端口信息\n\n![1](1.png)\n\n有个web服务\n\n## web网页\n\n访问过去是一个登录框\n\n![2](2.png)\n\n随便尝试几个密码\n\nadmin:admin登进去\n\n发现没有可以用的点\n\n就是个静态页面\n\n用Tscan工具爆破一下目录\n\n![3](3.png)\n\n找到zabbix的后台页面\n\n![4](4.png)\n\n网上搜索一下zabbix的默认密码\n\n找到Admin:zabbix\n\n成功登录\n\n![5](5.png)\n\n在这个后台找了一下功能点\n\n有一个文件上传和一个执行脚本\n\n一开始一直在尝试文件上传\n\n发现并没有漏洞点\n\n来到执行脚本这里\n\n![6](6.png)\n\n我们把命令改成弹shell\n\n然后执行命令\n\n点击ping\n\n![7](7.png)\n\n![8](8.png)\n\n成功拿到shell\n\n![9](9.png)\n\n切到home目录有个hyh账号\n\n成功拿到user的flag\n\n## root\n\n查找可以以sudo执行的命令\n\n![10](10.png)\n\n并没有可以执行的命令\n\n这里直接去找hyh的密码\n\n通过一顿翻找\n\n最后在配置文件中发现不知道是什么账号的密码\n\n![11](11.png)\n\n![12](12.png)\n\n尝试密码 发现是hyh的密码\n\n![13](13.png)\n\n看看这个账号有没有可以以sudo执行的命令\n\n![14](14.png)\n\n有一个mount命令\n\n查找有关信息\n\n发现我们可以挂载文件\n\n于是\n\n`sudo mount -o /bin/bash /bin/mount`\n\n`sudo mount`\n\n拿到root权限\n\n![15](15.png)\n","tags":["打靶","wp","mazesec"],"categories":["靶机"]},{"title":"mayuri靶机","url":"/2025/09/28/mayuri靶机/","content":"\n# Mayuri靶机\n\n## 端口信息\n\n先扫一下端口信息\n\n![1](1.png)\n\n开了2个web服务\n\n## http\n\n先看看80端口\n\n是一个查询价格的网站\n\n![2](2.png)\n\n输入数字编号会回显数据\n\n![3](3.png)\n\n试试输入别的东西看看回显情况\n\n![4](4.png)\n\n输入字母回显了报错信息\n\n我们把报错信息给ai帮我们看看这是什么数据库\n\n![5](5.png)\n\n是cypher数据库\n\n在网上搜一下有关这个数据库的注入方法\n\nhttps://blog.csdn.net/Che_ng/article/details/145965471https://blog.csdn.net/Che_ng/article/details/145965471\n\n找到这篇文章写了有关cypher注入的内容\n\n![6](6.png)\n\n先丢了一个测试的payload\n\n成功回显所以道具的价格\n\n那么就可以确认确实有注入漏洞\n\n这个时候我们别忘了再去看看那个8080端口web服务是干什么的\n\n![7](7.png)\n\n是一个登录框 猜测80端口可以爆出来我们想要的账号密码\n\n回到80端口 爆出节点标签\n\n![8](8.png)\n\n确认节点标签有个User\n\n那么直接爆这个节点的数据就行\n\n![9](9.png)\n\n最后得到账号密码\n\nOOOkkkaaabbbeee:Okabe\n\n![10](10.png)\n\n登进去直接有命令行可以用了 直接弹shell登上去看看\n\n## ssh\n\n![11](11.png)\n\n![12](12.png)\n\n成功登上去\n\nhome目录有个kyoma的账户\n\n直接先读取user的flag 看看user.txt有没有读的权限\n\n![13](13.png)\n\n这里kyoma文件夹没法被读取 但是可以被执行 文件也刚好可以被读\n\n这里刚好就直接读出来了 也是比较凑巧的\n\n## root\n\n经过一顿翻找并没有什么可用的东西\n\n最后在环境变量中找到疑似密码的数字\n\n![14](14.png)\n\n根据之前web网页上面的内容可以知道这个靶机neta了命运石之门\n\n看过命运石之门的都知道1.129848这个数值就是世界线变动率\n\n其实没看过的话 pass这个也应该想到可能是password\n\n我们用这个密码登上去试试\n\n![15](15.png)\n\n成功登录kyoma的账号\n\n我们看看有没有可以用的命令\n\n![16](16.png)\n\n并没有可以用的命令\n\n我们再去找找有suid的命令\n\n![17](17.png)\n\n发现叫TimeMachine的程序有suid 还就在home目录下\n\n其home目录下还有邮件\n\n![172](172.png)\n\n邮件内容提示我们要去使用时间机器\n\n![173](173.png)\n\n使用完之后一开始并没有什么特别的变化\n\n多次使用后发现那个时间戳一直和真实时间是同步的\n\n猜测可能调用了什么命令\n\n把TimeMachine拿到ida里面看看\n\n![18](18.png)\n\n发现在这个函数里面有调用一个命令\n\n![19](19.png)\n\n调用了timedatectl这个命名\n\n那么提权思路就清楚了\n\n我们构造一个同名的timedatectl命令 但是实际上是bash 然后把这个同名的timedatectl命令的路径的优先级排到最前面 使得我们自己构造的同名的timedatectl命令被优先执行\n\n直接写一个shell脚本拿root\n\n![21](21.png)\n\n在改一下这个shell脚本的权限然后执行就可以拿到root了\n\n![22](2.png)\n\n这里的shell是个哑shell 没有交互 但是没有大碍\n\n![23](23.png)\n\n最后拿到root的flag\n\n---\n\n# 关于环境变量提权\n\n主要来自于这篇文章\n\n[Linux-环境变量提权 - 1vxyz - 博客园](https://www.cnblogs.com/1vxyz/articles/17659773.html)\n\n命名的执行是根据环境变量中的目录去寻找命令的\n\n简单来说通过环境变量去提权 就是劫持命令 去执行我们自己构造的同名命令\n\n从而提权\n\n当然前提是这个最开始执行的命令是有suid的\n\n## suid\n\n是一种linux中特殊权限\n\n允许命令可以暂时以特殊权限去执行此命令\n\n可以通过\n\n`find / -type f -perm -4000 2>/dev/null`\n\n来寻找这类命令\n","tags":["打靶","知识","wp","mazesec"],"categories":["靶机"]},{"title":"资产收集","url":"/2025/09/28/资产收集/","content":"\n本人因为是学生所以主要挖的是edusrc\n\nedusrc的审核感觉也是比较快的（现在的速度基本上是一天一审）\n\n## 资产收集\n\n大部分情况挖洞都是在屏幕前点来点去\n\n过程也是相当的枯燥\n\n出货的时刻总是占一小部分\n\n一天没找到或者是没通过都是正常的\n\n所以找对一个好的资产收集方式可以大大的节约我们的时间\n\n以下讲的都是个人觉得比较高效的\n\n一些比较复杂的就不做推荐了\n\n---\n\n## 从域名下手\n\n因为挖的是edu的\n\n所以基本上所有学校都在范围之内\n\n每个学校基本都有一个主域名\n\n如果想一天就猛猛干一个大学的话\n\n可以试试在小蓝本或者爱企查上面先搜集一手学校信息\n\n然后使用一些域名爆破的工具\n\nsubfinder one for all等\n\n或者可以使用一些被动搜集域名的工具\n\nfofa hunter 360等网络空间资产引擎\n\n---\n\n## 从fofa的title下手\n\n说实话从域名下手的话还是太大众化了（如果就想挖证书大学的话还是要先仔细搜集一下绝大部分域名的）\n\n而且大部分都被搞过了\n\n除非有一些新上线的资产可以细细挖掘一手\n\n如果从域名下手的话确实资产无一例外都是学校的\n\n除非是新资产 不然大概率已经被干过了\n\n本人也是比较懒的那种所以就喜欢用**fofa**之类\n\n本人自认为从fofa或者hunter这类的网络空间资产引擎上面通过title去搜索大学资产是比较快捷的且高效的\n\n就拿fofa举例\n\ntitle=\"xx大学\"\n\n![2025-09-23-23-15-35-image](2025-09-23-23-15-35-image.png)\n\nfofa这些都是通过爬虫去爬取网站信息\n\n每天通过fofa搜集到的信息都不同\n\n有一定概率就找到了以往都没被人找到过的资产或者就是学校的新资产\n\n这样搜集的话有部分的网站可能就不是学校资产的\n\n有些是一眼就可以出来的\n\n有些的话是存疑就可以去试试看\n\n**现在本人挖到的证书都是直接通过title=\"xx大学\"的方式找到的**\n\n---\n\n## 从教育网段下手\n\n大部分资产其实就没发直接通过域名去搜集\n\n一些就是内部人员用的就不会去绑一个域名\n\n所以这个时候通过网段就是比较好的方法\n\nfofa的话就直接先随便搜一个学校然后点一下组织那里就可以了\n\n![2025-09-23-23-16-28-image](2025-09-23-23-16-28-image.png)\n\n教育网段配上title就可以开始一天的挖洞之旅了（笑）\n\n---\n\n## 从icon下手\n\n被用烂的框架都有一个固定的favicon\n\n我们可以把favicon下下来然后放到这个网站上\n\n![2025-09-23-23-20-27-image](2025-09-23-23-20-27-image.png)\n\n就可以得到favicon的MD5或者是hash\n\n然后通过icon_hash=\"\"的语法去搜集使用这个框架的网站\n\n一些常用的框架都有一些弱密码\n\n要是闲着没事干又不想认真挖 就可以直接找个框架的favicon然后开启一天的挖洞之旅了(笑)\n\n![83F007C8A1389B273ABA2C2ED1A090FF](83F007C8A1389B273ABA2C2ED1A090FF.gif)\n\n---\n\n## 叠甲环节\n\n文章来自作者日常积累，未经许可严禁转载，转载需联系本人。文中内容仅限学习交流，严禁用于商业及非法用途，涉及网络安全相关未经授权不得测试，违规使用后果自负，与作者及本文无关 。（都别乱搞哈）\n","tags":["知识","挖洞"],"categories":["挖洞记录"]},{"title":"test","url":"/2025/09/23/test/","content":"\n![1](1.png)\n"}]